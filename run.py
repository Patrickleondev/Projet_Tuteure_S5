#!/usr/bin/env python3
"""
Script de lancement de l'application Football Insight Predictor
"""
import os
import sys
from pathlib import Path

def check_environment():
    """V√©rifier l'environnement"""
    print("üîç V√©rification de l'environnement...")
    
    # V√©rifier Python
    print(f"   Python: {sys.version}")
    
    # V√©rifier les d√©pendances
    try:
        import flask
        print("   ‚úÖ Flask install√©")
    except ImportError:
        print("   ‚ùå Flask non install√©")
        return False
    
    try:
        import pandas
        print("   ‚úÖ Pandas install√©")
    except ImportError:
        print("   ‚ùå Pandas non install√©")
        return False
    
    try:
        import joblib
        print("   ‚úÖ Joblib install√©")
    except ImportError:
        print("   ‚ùå Joblib non install√©")
        return False
    
    try:
        import sklearn
        print("   ‚úÖ Scikit-learn install√©")
    except ImportError:
        print("   ‚ùå Scikit-learn non install√©")
        return False
    
    return True

def check_files():
    """V√©rifier les fichiers n√©cessaires"""
    print("\nüìÅ V√©rification des fichiers...")
    
    # Fichiers du mod√®le
    model_path = Path(__file__).parent.parent.parent / 'Impl√©mentation' / 'Regression' / 'modele_regression_foot.pkl'
    scaler_path = Path(__file__).parent.parent.parent / 'Impl√©mentation' / 'Regression' / 'scaler_regression.pkl'
    
    if model_path.exists():
        print("   ‚úÖ Mod√®le de r√©gression trouv√©")
    else:
        print("   ‚ùå Mod√®le de r√©gression non trouv√©")
        return False
    
    if scaler_path.exists():
        print("   ‚úÖ Scaler trouv√©")
    else:
        print("   ‚ùå Scaler non trouv√©")
        return False
    
    # Fichiers de donn√©es
    data_dir = Path(__file__).parent.parent.parent / 'FIP_DB'
    equipes_file = data_dir / 'equipes_par_championnat.csv'
    matchs_file = data_dir / 'matchs_par_championnat.csv'
    
    if equipes_file.exists():
        print("   ‚úÖ Donn√©es des √©quipes trouv√©es")
    else:
        print("   ‚ùå Donn√©es des √©quipes non trouv√©es")
        return False
    
    if matchs_file.exists():
        print("   ‚úÖ Donn√©es des matchs trouv√©es")
    else:
        print("   ‚ùå Donn√©es des matchs non trouv√©es")
        return False
    
    return True

def run_tests():
    """Lancer les tests"""
    print("\nüß™ Lancement des tests...")
    
    try:
        from test_simple import main as test_main
        return test_main()
    except Exception as e:
        print(f"   ‚ùå Erreur lors des tests: {str(e)}")
        return False

def start_app():
    """D√©marrer l'application"""
    print("\nüöÄ D√©marrage de l'application...")
    
    try:
        from app import app
        print("   ‚úÖ Application Flask charg√©e")
        print("\nüåê L'application est accessible √† l'adresse:")
        print("   http://localhost:5000")
        print("\nüìã Fonctionnalit√©s disponibles:")
        print("   - Pr√©diction de matchs")
        print("   - Statistiques des √©quipes")
        print("   - Assistant IA (chatbot)")
        print("   - Interface moderne")
        
        # D√©marrer l'application
        app.run(debug=True, host='0.0.0.0', port=5000)
        
    except Exception as e:
        print(f"   ‚ùå Erreur lors du d√©marrage: {str(e)}")
        return False

def main():
    """Fonction principale"""
    print("‚öΩ Football Insight Predictor - Lancement")
    print("=" * 50)
    
    # V√©rifications
    if not check_environment():
        print("\n‚ùå Probl√®me d'environnement d√©tect√©.")
        print("   Installez les d√©pendances: pip install -r requirements.txt")
        return False
    
    if not check_files():
        print("\n‚ùå Fichiers manquants d√©tect√©s.")
        print("   V√©rifiez que tous les fichiers sont pr√©sents.")
        return False
    
    # Tests
    if not run_tests():
        print("\n‚ùå Tests √©chou√©s.")
        return False
    
    print("\n‚úÖ Toutes les v√©rifications sont pass√©es !")
    
    # D√©marrer l'application
    start_app()

if __name__ == "__main__":
    main() 